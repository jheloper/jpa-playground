/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package personal.jpa.playground;

import java.math.BigDecimal;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;

public class App {

    public static void main(String[] args) {

        EntityManagerFactory emf = Persistence.createEntityManagerFactory("jpa-playground");

        EntityManager em = emf.createEntityManager();

        EntityTransaction tx = em.getTransaction();

        try {

            tx.begin();

            logicForMember(em);
            logicForProduct(em);
            logicForDetach(em);

            tx.commit();

        } catch(Exception e) {
            e.printStackTrace();
            tx.rollback();
        } finally {
            em.close();
        }

        emf.close();
    }


    public static void logicForMember(final EntityManager em) {

        final Member member = new Member();

        member.setUsername("jh");
        member.setAge(20);

        em.persist(member);

        member.setAge(25);

        final Member findMember = em.find(Member.class, member.getId());
        System.out.printf("findMember = %s, age = %d%n", findMember.getUsername(),
                findMember.getAge());

        final List<Member> members =
                em.createQuery("select m from Member m", Member.class).getResultList();
        System.out.println("members.size = " + members.size());

        em.remove(member);
    }


    public static void logicForProduct(final EntityManager em) {

        final Product product = new Product();
        product.setProductName("test product");
        product.setQuantity(10);
        product.setPrice(BigDecimal.valueOf(10000));

        em.persist(product);

        product.setQuantity(15);

        System.out.println("product quantity = " + product.getQuantity());
    }


    public static void logicForDetach(final EntityManager em) {

        final Product product = new Product();
        product.setProductName("test product2");
        product.setQuantity(10);
        product.setPrice(BigDecimal.valueOf(5000));

        em.persist(product);

        System.out.println("product id = " + product.getId());

        em.detach(product);
    }
}
